
macro(sos_arm_arch ARCH_NAME)

set(SOS_ARM_ARCH_BUILD_FLOAT_OPTIONS_V7M -march=armv7-m -DARM_MATH_CM3=1)
set(SOS_ARM_ARCH_BUILD_FLOAT_OPTIONS_V7EM -march=armv7e-m -DARM_MATH_CM4=1)
set(SOS_ARM_ARCH_BUILD_FLOAT_OPTIONS_V7EM_F4SS -march=armv7e-m -mfloat-abi=soft -mfpu=fpv4-sp-d16 -U__SOFTFP__ -D__FPU_PRESENT=1 -DARM_MATH_CM4=1)
set(SOS_ARM_ARCH_BUILD_FLOAT_OPTIONS_V7EM_F4SH -march=armv7e-m -mfloat-abi=hard -mfpu=fpv4-sp-d16 -U__SOFTFP__ -D__FPU_PRESENT=1 -DARM_MATH_CM4=1)
set(SOS_ARM_ARCH_BUILD_FLOAT_OPTIONS_V7EM_F5SS -march=armv7e-m -mfloat-abi=soft -mfpu=fpv4-sp-d16 -U__SOFTFP__ -D__FPU_PRESENT=1 -DARM_MATH_CM4=1)
set(SOS_ARM_ARCH_BUILD_FLOAT_OPTIONS_V7EM_F5SH -march=armv7e-m -mfloat-abi=hard -mfpu=fpv4-sp-d16 -U__SOFTFP__ -D__FPU_PRESENT=1 -DARM_MATH_CM4=1)
set(SOS_ARM_ARCH_BUILD_FLOAT_OPTIONS_V7EM_F5DS -march=armv7e-m -mfloat-abi=soft -mfpu=fpv5-d16 -U__SOFTFP__ -D__FPU_PRESENT=1 -DARM_MATH_CM7=1)
set(SOS_ARM_ARCH_BUILD_FLOAT_OPTIONS_V7EM_F5DH -march=armv7e-m -mfloat-abi=hard -mfpu=fpv5-d16 -U__SOFTFP__ -D__FPU_PRESENT=1 -DARM_MATH_CM7=1)

set(SOS_ARM_ARCH_BUILD_FLOAT_DIR_V7M ".")
set(SOS_ARM_ARCH_BUILD_FLOAT_DIR_V7EM ".")

string(COMPARE EQUAL "${CMAKE_C_COMPILER_VERSION}" 9.3.1 IS_GCC_9)
string(COMPARE EQUAL "${CMAKE_C_COMPILER_VERSION}" 8.3.1 IS_GCC_8)
if(IS_GCC_9 OR IS_GCC_8)
	set(SOS_ARM_ARCH_BUILD_FLOAT_DIR_V7EM_F4SS "softfp") #single precision soft ABI
	set(SOS_ARM_ARCH_BUILD_FLOAT_DIR_V7EM_F4SH "hard")   #single precision hard ABI
	set(SOS_ARM_ARCH_BUILD_FLOAT_DIR_V7EM_F5SS "softfp") #single precision soft ABI
	set(SOS_ARM_ARCH_BUILD_FLOAT_DIR_V7EM_F5SH "hard")   #single precision hard ABI
	set(SOS_ARM_ARCH_BUILD_FLOAT_DIR_V7EM_F5DS "softfp")    #double precision soft ABI
	set(SOS_ARM_ARCH_BUILD_FLOAT_DIR_V7EM_F5DH "hard")      #double precision hard ABI
	set(SOS_ARM_ARCH_BUILD_INSTALL_DIR_V7M "thumb/v7-m/nofp") #M3 no FP
	set(SOS_ARM_ARCH_BUILD_INSTALL_DIR_V7EM "thumb/v7-m/nofp") #M4 no FP
	set(SOS_ARM_ARCH_BUILD_INSTALL_DIR_V7_FP "thumb/v7+fp") #M4 with FP
	set(SOS_ARM_ARCH_BUILD_INSTALL_DIR_V7EM_DP "thumb/v7e-m+dp") #M7
	set(SOS_ARM_ARCH_BUILD_INSTALL_DIR_V7EM_FP "thumb/v7e-m+fp") #m7
else()
	set(SOS_ARM_ARCH_BUILD_FLOAT_DIR_V7EM_F4SS "fpv4-sp/softfp") #single precision soft ABI
	set(SOS_ARM_ARCH_BUILD_FLOAT_DIR_V7EM_F4SH "fpv4-sp/hard")   #single precision hard ABI
	set(SOS_ARM_ARCH_BUILD_FLOAT_DIR_V7EM_F5SS "fpv5-sp/softfp") #single precision soft ABI
	set(SOS_ARM_ARCH_BUILD_FLOAT_DIR_V7EM_F5SH "fpv5-sp/hard")   #single precision hard ABI
	set(SOS_ARM_ARCH_BUILD_FLOAT_DIR_V7EM_F5DS "fpv5/softfp")    #double precision soft ABI
	set(SOS_ARM_ARCH_BUILD_FLOAT_DIR_V7EM_F5DH "fpv5/hard")      #double precision hard ABI
	set(SOS_ARM_ARCH_BUILD_INSTALL_DIR_V7M "thumb/v7-m")         #thumb ARMV7M
	set(SOS_ARM_ARCH_BUILD_INSTALL_DIR_V7EM "thumb/v7e-m")       #thumb ARMV7EM
	set(SOS_ARM_ARCH_BUILD_INSTALL_DIR_V7_FP "thumb/v7e-m")
	set(SOS_ARM_ARCH_BUILD_INSTALL_DIR_V7EM_DP "thumb/v7e-m")       #thumb ARMV7EM
	set(SOS_ARM_ARCH_BUILD_INSTALL_DIR_V7EM_FP "thumb/v7e-m")       #thumb ARMV7EM
endif()

string(COMPARE EQUAL "${ARCH_NAME}" v7m IS_V7M)
string(COMPARE EQUAL "${ARCH_NAME}" v7em IS_V7EM)
string(COMPARE EQUAL "${ARCH_NAME}" v7em_f4ss IS_V7EM_F4SS)
string(COMPARE EQUAL "${ARCH_NAME}" v7em_f4sh IS_V7EM_F4SH)
string(COMPARE EQUAL "${ARCH_NAME}" v7em_f5ss IS_V7EM_F5SS)
string(COMPARE EQUAL "${ARCH_NAME}" v7em_f5sh IS_V7EM_F5SH)
string(COMPARE EQUAL "${ARCH_NAME}" v7em_f5ds IS_V7EM_F5DS)
string(COMPARE EQUAL "${ARCH_NAME}" v7em_f5dh IS_V7EM_F5DH)

if(IS_V7M) #armv7m soft float
	set(SOS_ARM_ARCH_BUILD_INSTALL_DIR ${SOS_ARM_ARCH_BUILD_INSTALL_DIR_V7M})
	set(SOS_ARM_ARCH_BUILD_FLOAT_DIR ${SOS_ARM_ARCH_BUILD_FLOAT_DIR_V7M})
	set(SOS_ARM_ARCH_BUILD_FLOAT_OPTIONS ${SOS_ARM_ARCH_BUILD_FLOAT_OPTIONS_V7M})
elseif(IS_V7EM) #armv7em soft float
	set(SOS_ARM_ARCH_BUILD_INSTALL_DIR ${SOS_ARM_ARCH_BUILD_INSTALL_DIR_V7EM})
	set(SOS_ARM_ARCH_BUILD_FLOAT_DIR ${SOS_ARM_ARCH_BUILD_FLOAT_DIR_V7EM})
	set(SOS_ARM_ARCH_BUILD_FLOAT_OPTIONS ${SOS_ARM_ARCH_BUILD_FLOAT_OPTIONS_V7EM})
elseif(IS_V7EM_F4SS) #armv7em fpu4 single precision soft abi
	set(SOS_ARM_ARCH_BUILD_INSTALL_DIR ${SOS_ARM_ARCH_BUILD_INSTALL_DIR_V7_FP})
	set(SOS_ARM_ARCH_BUILD_FLOAT_DIR ${SOS_ARM_ARCH_BUILD_FLOAT_DIR_V7EM_F4SS})
	set(SOS_ARM_ARCH_BUILD_FLOAT_OPTIONS ${SOS_ARM_ARCH_BUILD_FLOAT_OPTIONS_V7EM_F4SS})
elseif(IS_V7EM_F4SH) #armv7em fpu4 single precision hard abi
	set(SOS_ARM_ARCH_BUILD_INSTALL_DIR ${SOS_ARM_ARCH_BUILD_INSTALL_DIR_V7_FP})
	set(SOS_ARM_ARCH_BUILD_FLOAT_DIR ${SOS_ARM_ARCH_BUILD_FLOAT_DIR_V7EM_F4SH})
	set(SOS_ARM_ARCH_BUILD_FLOAT_OPTIONS ${SOS_ARM_ARCH_BUILD_FLOAT_OPTIONS_V7EM_F4SH})
elseif(IS_V7EM_F5SS) #armv7em fpu5 single precision soft abi
	set(SOS_ARM_ARCH_BUILD_INSTALL_DIR ${SOS_ARM_ARCH_BUILD_INSTALL_DIR_V7EM_FP})
	set(SOS_ARM_ARCH_BUILD_FLOAT_DIR ${SOS_ARM_ARCH_BUILD_FLOAT_DIR_V7EM_F5SS})
	set(SOS_ARM_ARCH_BUILD_FLOAT_OPTIONS ${SOS_ARM_ARCH_BUILD_FLOAT_OPTIONS_V7EM_F5SS})
elseif(IS_V7EM_F5SH) #armv7em fpu5 single precision hard abi
	set(SOS_ARM_ARCH_BUILD_INSTALL_DIR ${SOS_ARM_ARCH_BUILD_INSTALL_DIR_V7EM_FP})
	set(SOS_ARM_ARCH_BUILD_FLOAT_DIR ${SOS_ARM_ARCH_BUILD_FLOAT_DIR_V7EM_F5SH})
	set(SOS_ARM_ARCH_BUILD_FLOAT_OPTIONS ${SOS_ARM_ARCH_BUILD_FLOAT_OPTIONS_V7EM_F5SH})
elseif(IS_V7EM_F5DS) #armv7em fpu5 double precision soft abi
	set(SOS_ARM_ARCH_BUILD_INSTALL_DIR ${SOS_ARM_ARCH_BUILD_INSTALL_DIR_V7EM_DP})
	set(SOS_ARM_ARCH_BUILD_FLOAT_DIR ${SOS_ARM_ARCH_BUILD_FLOAT_DIR_V7EM_F5DS})
	set(SOS_ARM_ARCH_BUILD_FLOAT_OPTIONS ${SOS_ARM_ARCH_BUILD_FLOAT_OPTIONS_V7EM_F5DS})
elseif(IS_V7EM_F5DH) #armv7em fpu5 double precision hard abi
	set(SOS_ARM_ARCH_BUILD_INSTALL_DIR ${SOS_ARM_ARCH_BUILD_INSTALL_DIR_V7EM_DP})
	set(SOS_ARM_ARCH_BUILD_FLOAT_DIR ${SOS_ARM_ARCH_BUILD_FLOAT_DIR_V7EM_F5DH})
	set(SOS_ARM_ARCH_BUILD_FLOAT_OPTIONS ${SOS_ARM_ARCH_BUILD_FLOAT_OPTIONS_V7EM_F5DH})
endif()

set(SOS_BUILD_SYSTEM_INCLUDES
	${CMAKE_INSTALL_PREFIX}/../lib/gcc/arm-none-eabi/${CMAKE_CXX_COMPILER_VERSION}/include
	${CMAKE_INSTALL_PREFIX}/../lib/gcc/arm-none-eabi/${CMAKE_CXX_COMPILER_VERSION}/include-fixed
	${CMAKE_INSTALL_PREFIX}/include
	${CMAKE_INSTALL_PREFIX}/include/c++/${CMAKE_CXX_COMPILER_VERSION}
	${CMAKE_INSTALL_PREFIX}/include/c++/${CMAKE_CXX_COMPILER_VERSION}/arm-none-eabi
	)

endmacro()



